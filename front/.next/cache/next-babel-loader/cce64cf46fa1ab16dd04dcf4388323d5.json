{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nconst dummyUser = {\n  nickname: 'kokihoon',\n  Post: [],\n  Followings: [],\n  Followers: [],\n  signUpData: {}\n};\nexport const intialstate = {\n  isLoggedIn: false,\n  user: null\n};\nexport const SIGN_UP = 'SIGN_UP';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const signUpAction = data => {\n  return {\n    type: SIGN_UP,\n    data: data\n  };\n};\nexport const loginAction = {\n  type: LOG_IN\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst reducer = (state = intialstate, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: true,\n          user: dummyUser\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread({}, state, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    case SIGN_UP:\n      {\n        return _objectSpread({}, state, {\n          signUpData: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kihoonko/Desktop/react-nodebird/front/reducers/user.js"],"names":["dummyUser","nickname","Post","Followings","Followers","signUpData","intialstate","isLoggedIn","user","SIGN_UP","LOG_IN","LOG_OUT","signUpAction","data","type","loginAction","logoutAction","reducer","state","action"],"mappings":";AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,QAAQ,EAAG,UADG;AAEdC,EAAAA,IAAI,EAAG,EAFO;AAGdC,EAAAA,UAAU,EAAG,EAHC;AAIdC,EAAAA,SAAS,EAAG,EAJE;AAKdC,EAAAA,UAAU,EAAG;AALC,CAAlB;AAOA,OAAO,MAAMC,WAAW,GAAE;AACtBC,EAAAA,UAAU,EAAE,KADU;AAEtBC,EAAAA,IAAI,EAAG;AAFe,CAAnB;AAKP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAGP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAEL,OADH;AAEHI,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,WAAW,GAAG;AACvBD,EAAAA,IAAI,EAAGJ;AADgB,CAApB;AAIP,OAAO,MAAMM,YAAY,GAAG;AACxBF,EAAAA,IAAI,EAACH;AADmB,CAArB;;AAIP,MAAMM,OAAO,GAAG,CAACC,KAAK,GAACZ,WAAP,EAAoBa,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACL,IAAd;AACI,SAAKJ,MAAL;AAAc;AACV,iCACOQ,KADP;AAEIX,UAAAA,UAAU,EAAC,IAFf;AAGIC,UAAAA,IAAI,EAAER;AAHV;AAKH;;AACD,SAAKW,OAAL;AAAe;AACX,iCACOO,KADP;AAEIX,UAAAA,UAAU,EAAG,KAFjB;AAGIC,UAAAA,IAAI,EAAG;AAHX;AAKH;;AACD,SAAKC,OAAL;AAAe;AACX,iCACOS,KADP;AAEIb,UAAAA,UAAU,EAAGc,MAAM,CAACN;AAFxB;AAIH;;AACD;AAAU;AACN,iCACOK,KADP;AAGH;AAzBL;AA2BH,CA5BD;;AA8BA,eAAeD,OAAf","sourcesContent":["const dummyUser = {\n    nickname : 'kokihoon',\n    Post : [],\n    Followings : [],\n    Followers : [],\n    signUpData : {}, \n}\nexport const intialstate= {\n    isLoggedIn: false,\n    user : null\n};\n\nexport const SIGN_UP = 'SIGN_UP';\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\nexport const LOG_OUT = 'LOG_OUT';\n\n\nexport const signUpAction = (data) => {\n    return {\n        type: SIGN_UP,\n        data: data,\n    };\n};\nexport const loginAction = {\n    type : LOG_IN,\n};\n\nexport const logoutAction = {\n    type:LOG_OUT,\n};\n\nconst reducer = (state=intialstate, action) => {\n    switch(action.type) {\n        case LOG_IN : {\n            return {\n                ...state,\n                isLoggedIn:true,\n                user: dummyUser,\n            }\n        }\n        case LOG_OUT : {\n            return {\n                ...state,\n                isLoggedIn : false,\n                user : null,\n            }\n        }\n        case SIGN_UP : {\n            return {\n                ...state,\n                signUpData : action.data,\n            }\n        }\n        default : {\n            return {\n                ...state\n            }\n        }\n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}